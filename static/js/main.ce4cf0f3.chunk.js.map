{"version":3,"sources":["components/ProductCard/constants.js","components/ProductCard/index.jsx","components/Header/index.jsx","utils.js","components/Categories/constants.js","components/Categories/index.jsx","components/ProductCards/index.jsx","components/Loading/index.jsx","components/InfoText/index.jsx","App.js","index.js"],"names":["indicatorsTranslations","calories","protein","fat","carbs","ProductCard","id","img","title","indicators","weight","incrItem","decrItem","countInOrder","className","alt","src","Object","keys","map","ind","onClick","disabled","Header","num","orderList","children","products","onBasketClick","isBasketOpen","total","prId","count","product","find","forEach","toFixed","style","fontSize","color","categoriesTranslations","all","breakfasts","salad","soup","chicken","meat","fish","sidedishes","dessert","drinks","sets","barbecue","freeze","Categories","counts","data","active","category","name","ProductCards","Loading","InfoText","ALL_MENU","stopListCategories","App","useState","loading","setLoading","setProducts","categories","setCategories","activeCategory","setActiveCategory","setOrderList","setBasketOpen","newList","saveOrder","order","localStorage","setItem","JSON","stringify","useEffect","a","fetch","response","json","uniqueCats","Set","filter","includes","unshift","orderString","getItem","fromEntries","entries","parse","fetchMyAPI","orderListKeys","items","length","itemId","filteredItems","orderListCountByCategories","reduce","acc","cat","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ce4cf0f3.chunk.js","sourcesContent":["export const indicatorsTranslations = {\n  calories: \"Ккал\",\n  protein: \"Белки\",\n  fat: \"Жиры\",\n  carbs: \"Углеводы\"\n};\n","import \"./styles.css\";\nimport { indicatorsTranslations } from \"./constants\";\n\nexport const ProductCard = ({\n  id,\n  img,\n  title,\n  indicators,\n  weight,\n  incrItem,\n  decrItem,\n  countInOrder,\n}) => {\n  return (\n    <div className=\"card\">\n      <div className=\"line\">\n        <img className=\"picture\" alt={id} src={img}></img>\n        <div className=\"indicators\">\n          {Object.keys(indicators).map((ind) => (\n            <div key={`${id}-${ind}`} className=\"indicators-line\">\n              <span>{indicatorsTranslations[ind]}</span>\n              <span>{indicators[ind]}</span>\n            </div>\n          ))}\n          <div className=\"indicators-line\">\n            <span>Вес</span>\n            <span>{weight} гр</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"info\">\n        <p className=\"title\">{title}</p>\n        <div className=\"buttons\">\n          <button onClick={decrItem(id)} disabled={countInOrder === 0}>\n            −\n          </button>\n          <span>{countInOrder}</span>\n          <button onClick={incrItem(id)}>+</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import \"./styles.css\";\nimport { formatWeightSymb } from \"../../utils\";\n\nexport const Header = ({\n  orderList,\n  children,\n  products,\n  onBasketClick,\n  isBasketOpen\n}) => {\n  const total = {\n    calories: 0,\n    protein: 0,\n    fat: 0,\n    carbs: 0,\n    weight: 0\n  };\n\n  // перебор по элементам в формате [ключ, значение]\n  for (const prId in orderList) {\n    const count = orderList[prId];\n\n    const product = products.find(({ id }) => id === prId);\n\n    if (product) {\n      const { indicators } = product;\n      Object.keys(indicators).forEach((ind) => {\n        total[ind] += indicators[ind] * count;\n      });\n\n      total.weight += product.weight * count;\n    }\n  }\n\n  return (\n    <header>\n      <div className=\"header\">\n        <div className=\"indicator calories\">\n          <span className=\"value\">{total.calories}</span>\n          <span className=\"label\">Ккал</span>\n        </div>\n        <div className=\"indicators\">\n          <div className=\"indicator protein\">\n            <span className=\"value\">{total.protein}</span>\n            <span className=\"label\">Белки</span>\n          </div>\n          <div className=\"indicator fat\">\n            <span className=\"value\">{total.fat}</span>\n            <span className=\"label\">Жиры</span>\n          </div>\n          <div className=\"indicator carbs\">\n            <span className=\"value\">{total.carbs}</span>\n            <span className=\"label\">Углеводы</span>\n          </div>\n        </div>\n        <div className=\"indicator\">\n          <span className=\"value\">\n            {total.weight > 1000\n              ? (total.weight * 0.001).toFixed(1)\n              : total.weight}\n          </span>\n          <span className=\"label\">{formatWeightSymb(total.weight)}</span>\n        </div>\n        <div className=\"basket\">\n          <i\n            className={`icon icon-${isBasketOpen ? \"food\" : \"cart\"}`}\n            onClick={onBasketClick}\n            style={{ fontSize: \"30px\", color: \"white\" }}\n          ></i>\n        </div>\n      </div>\n      {children}\n    </header>\n  );\n};\n","export const formatWeight = (num) =>\n  num > 1000 ? `${num / 1000} кг` : `${num} гр`;\n\nexport const formatWeightSymb = (num) => (num > 1000 ? \"кг\" : \"грамм\");\n","export const categoriesTranslations = {\n  all: \"Все блюда\",\n  breakfasts: \"Завтраки\",\n  salad: \"Салат\",\n  soup: \"Суп\",\n  chicken: \"Птица\",\n  meat: \"Мясо\",\n  fish: \"Рыба и море\",\n  sidedishes: \"Гарниры\",\n  dessert: \"Десерт\",\n  drinks: \"Напитки\",\n  sets: \"Наборы\",\n  barbecue: \"Шашлык\",\n  freeze: \"Заморозка\"\n};\n","import \"./styles.css\";\nimport { categoriesTranslations } from \"./constants\";\n\nexport const Categories = ({ counts, data, active, onClick }) => (\n  <ul className=\"categories\">\n    {data.map((category) => {\n      const className = `category${active === category ? \" active\" : \"\"}`;\n      return (\n        <li\n          name={category}\n          onClick={onClick(category)}\n          className={className}\n          key={category}\n        >\n          {categoriesTranslations[category]}\n          {counts[category] > 0 && (\n            <span className=\"count\">{counts[category]}</span>\n          )}\n        </li>\n      );\n    })}\n  </ul>\n);\n","import \"./styles.css\";\n\nexport const ProductCards = ({ children }) => (\n  <div className=\"cards\">{children}</div>\n);\n","import \"./styles.css\";\n\nexport const Loading = () => (\n  <section className=\"loading\">\n    <p>Загрузка...</p>\n  </section>\n);\n","import \"./styles.css\";\n\nexport const InfoText = ({ children }) => (\n  <div className=\"info-text\">\n    <div className=\"info-text-icon-basket\"></div>\n    <p>{children}</p>\n  </div>\n);\n","import { useState, useEffect } from \"react\";\nimport { ProductCard } from \"./components/ProductCard\";\nimport { Header } from \"./components/Header\";\nimport { Categories } from \"./components/Categories\";\nimport { ProductCards } from \"./components/ProductCards\";\nimport { Loading } from \"./components/Loading\";\nimport { InfoText } from \"./components/InfoText\";\nimport { Fonts } from \"./components/Fonts\";\n\nimport \"./styles.css\";\n\nconst ALL_MENU = \"all\";\nconst stopListCategories = [\"sets\", \"freeze\", \"barbecue\"];\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [orderList, setOrderList] = useState({}); // { id: count }\n  const [isBasketOpen, setBasketOpen] = useState(false);\n\n  const incrItem = (id) => () => {\n    const newList = { ...orderList };\n    newList[id] ? (newList[id] += 1) : (newList[id] = 1);\n    setOrderList(newList);\n    saveOrder(newList);\n  };\n\n  const decrItem = (id) => () => {\n    const newList = { ...orderList };\n    newList[id] -= 1;\n    if (newList[id] === 0) delete newList[id];\n    setOrderList(newList);\n    saveOrder(newList);\n  };\n\n  const saveOrder = (order) => {\n    localStorage.setItem(\"order\", JSON.stringify(order));\n  };\n\n  const filterProducts = ({ category }) =>\n    !stopListCategories.includes(category) &&\n    (category === activeCategory || activeCategory === ALL_MENU);\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      setLoading(true);\n      let response = await fetch(\n        \"https://justpilz.github.io/mkitchen-page/products.json\"\n      );\n      response = await response.json();\n\n      const uniqueCats = [\n        ...new Set(\n          response\n            .filter(({ category }) => !stopListCategories.includes(category))\n            .map(({ category }) => category)\n        ),\n      ];\n      uniqueCats.unshift(ALL_MENU);\n\n      setProducts(response);\n      setCategories(uniqueCats);\n      setActiveCategory(uniqueCats[0]);\n\n      // Загрузка заказ из storage с валидацией\n      const orderString = localStorage.getItem(\"order\");\n      if (orderString) {\n        const order = Object.fromEntries(\n          Object.entries(JSON.parse(orderString)).filter(\n            ([id]) => response[id] !== null\n          )\n        );\n        setOrderList(order);\n        saveOrder(order);\n      }\n\n      setLoading(false);\n    }\n\n    fetchMyAPI();\n  }, []);\n\n  const handleCategoryChanged = (cat) => () => {\n    setActiveCategory(cat);\n  };\n\n  const handleBasketSwitch = () => {\n    setBasketOpen(!isBasketOpen);\n  };\n\n  const orderListKeys = Object.keys(orderList);\n\n  const items = isBasketOpen\n    ? orderListKeys.length\n      ? orderListKeys.map((itemId) => products.find(({ id }) => id === itemId))\n      : []\n    : products;\n\n  const filteredItems = items?.filter(filterProducts);\n\n  const orderListCountByCategories = orderListKeys.length\n    ? orderListKeys.reduce((acc, itemId) => {\n        const product = products.find(({ id }) => id === itemId);\n\n        if (!acc[product.category]) acc[product.category] = 0;\n        acc[product.category] += orderList[itemId];\n\n        return acc;\n      }, {})\n    : {};\n\n  return (\n    <div className=\"App\">\n      <main>\n        {loading || !categories ? (\n          <Loading />\n        ) : (\n          <>\n            <Header\n              orderList={orderList}\n              products={items}\n              onBasketClick={handleBasketSwitch}\n              isBasketOpen={isBasketOpen}\n            >\n              <Categories\n                counts={orderListCountByCategories}\n                data={categories}\n                active={activeCategory}\n                onClick={handleCategoryChanged}\n              />\n            </Header>\n\n            {filteredItems.length ? (\n              <ProductCards>\n                {filteredItems?.map((data) => (\n                  <ProductCard\n                    key={`${data.category}-${data.id}`}\n                    {...data}\n                    incrItem={incrItem}\n                    decrItem={decrItem}\n                    countInOrder={orderList[data.id] || 0}\n                  />\n                ))}\n              </ProductCards>\n            ) : (\n              <InfoText>\n                {orderListKeys.length\n                  ? \"В\\u00a0этой категории ничего не выбрано.\"\n                  : \"Корзина пуста\"}\n                <br />\n                <br />\n                Нажмите на&nbsp;\n                <i\n                  className=\"icon icon-food\"\n                  style={{ fontSize: \"20px\" }}\n                />{\" \"}\n                в&nbsp;верхней панели для&nbsp;возврата к&nbsp;меню\n                и&nbsp;добавьте что&#8209;нибудь вкусненькое.\n              </InfoText>\n            )}\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\nimport App2 from \"./Menu\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n    {/* <App2 /> */}\n  </StrictMode>\n);\n"],"sourceRoot":""}